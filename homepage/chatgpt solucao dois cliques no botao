problema que você está enfrentando ocorre porque, ao inicializar o seu código, o valor de display no #navlist não está definido. Quando você clica pela primeira vez no #sidebar-button, o JavaScript tenta comparar o valor style.display com "none", mas esse valor está vazio, o que faz o código não funcionar corretamente na primeira tentativa.

Solução:
Para resolver esse problema, é melhor garantir que o valor inicial de display esteja claramente definido e também evitar a comparação direta com style.display. Em vez disso, podemos verificar se o elemento possui a classe show (que será responsável por controlar a visibilidade) ou comparar se o estilo está visível usando a propriedade getComputedStyle.

Aqui está a solução refinada:

Passos:
CSS: Garanta que a classe show controle a visibilidade.
JavaScript: Em vez de comparar diretamente style.display, verifique se o #navlist tem a classe show e alterne essa classe ao clicar.
CSS:
Mantenha o controle de visibilidade usando a classe show:

css
Copiar
#navlist {
    display: none; /* Padrão: escondido */
}

#navlist.show {
    display: block; /* Visível quando a classe 'show' for adicionada */
}

#sidebar-button {
    display: none;
}

@media (max-width: 470px) {
    header {
        height: 100px;
    }

    #navlist {
        position: absolute;
        height: calc(100% - 2em - 8px);
        width: 200px;
        background-color: black;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.6);
        display: none;
    }
    
    #navlist.show {
        display: block;
    }

    #sidebar-button {
        position: absolute;
        display: grid;
        place-items: center;
        background-color: whitesmoke;
        color: black;
        border-radius: 100%;
        width: 40px;
        height: 40px;
        margin-top: 4px;
        left: 6px;
    }

    #sidebar-button #sidebar-button-icon {
        font-size: 30px;
        font-weight: bold;
        text-align: center;
        margin: 0;
        margin-top: -2px;
    }
}
JavaScript:
Agora, ao invés de comparar diretamente o style.display, vamos usar a verificação da classe show.

javascript
Copiar
function active_sidebar() {
    const navlist = document.getElementById("navlist");
    const icon = document.getElementById("sidebar-button-icon");

    if (navlist.classList.contains("show")) {
        // Se a classe 'show' está presente, esconda o menu
        navlist.classList.remove("show");
        icon.innerHTML = "▶"; // Ícone de mostrar
        icon.style.paddingLeft = "5px";
        icon.style.paddingRight = "0";
    } else {
        // Se a classe 'show' não está presente, mostre o menu
        navlist.classList.add("show");
        icon.innerHTML = "◀"; // Ícone de esconder
        icon.style.paddingLeft = "0";
        icon.style.paddingRight = "5px";
    }
}
Explicação:
CSS: A classe show é responsável por mostrar o #navlist. Quando a classe show é adicionada ao elemento, ele se torna visível (display: block). Por padrão, o #navlist começa com display: none.

JavaScript: Ao clicar no sidebar-button, o JavaScript verifica se a classe show está presente no #navlist. Se estiver, ela é removida, o que faz o menu desaparecer; caso contrário, a classe é adicionada, tornando o menu visível.

Vantagens dessa abordagem:
Consistência: Usar classes CSS para controlar a visibilidade é mais robusto, pois permite que o navegador gerencie os estilos, sem sobrescrever diretamente a propriedade display via JavaScript.
Acessibilidade: Usando classes, o comportamento visual é mais fácil de depurar e gerenciar.
Menos dependência de style.display: Não precisamos depender do valor inline style.display que pode não ser definido em certos momentos ou pode gerar comportamentos inesperados.
Essa abordagem deve resolver o problema de clicar duas vezes para que o menu seja exibido corretamente.



